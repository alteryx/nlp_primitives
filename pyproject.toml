[build-system]
requires = [
    "setuptools >= 61.0.0",
    "wheel"
]
build-backend = "setuptools.build_meta"

[project]
name = "nlp_primitives"
readme = "README.md"
description = "natural language processing primitives for Featuretools"
dynamic = ["version"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
]
authors = [
    {name="Alteryx, Inc.", email="open_source_support@alteryx.com"}
]
maintainers = [
    {name="Alteryx, Inc.", email="open_source_support@alteryx.com"}
]
keywords = ["feature engineering", "data science", "machine learning", "natural language processing"]
license = {text = "BSD 3-clause"}
requires-python = ">=3.8,<4"
dependencies = [
    "numpy >= 1.17.5",
    "pandas >= 1.3.0",
    "featuretools >= 1.5.0",
    "nltk >= 3.4.5",
    "scikit-learn >= 0.20.0",
    "woodwork >= 0.8.1",
]

[project.urls]
"Documentation" = "https://featuretools.alteryx.com"
"Source Code"= "https://github.com/alteryx/nlp_primitives/"
"Changes" = "https://github.com/alteryx/nlp_primitives/blob/main/release_notes.rst"
"Issue Tracker" = "https://github.com/alteryx/nlp_primitives/issues"
"Twitter" = "https://twitter.com/alteryxoss"
"Chat" = "https://join.slack.com/t/alteryx-oss/shared_invite/zt-182tyvuxv-NzIn6eiCEf8TBziuKp0bNA"

[project.optional-dependencies]
test = [
    "pytest >= 7.1.2",
    "pytest-cov >= 3.0.0",
]
dev = [
    "flake8 == 5.0.4",
    "isort == 5.9.3",
    "black == 22.8.0",
    "pre-commit == 2.20.0",
    "nlp_primitives[test]"
]
complete = [
    "tensorflow >= 1.14.0; sys_platform!='darwin' or platform_machine!='arm64'",
    "tensorflow-metal >= 0.4.0; sys_platform=='darwin' and platform_machine=='arm64'",
    "tensorflow-macos >= 2.8.0; sys_platform=='darwin' and platform_machine=='arm64'",
    "tensorflow_hub >= 0.4.0",
]

[project.entry-points."featuretools_plugin"]
nlp_primitives = "nlp_primitives"

[project.entry-points."featuretools_primitives"]
nlp_primitives = "nlp_primitives"

[tool.setuptools]
include-package-data = true
license-files = ["LICENSE"]

[tool.setuptools.packages.find]
namespaces = true

[tool.setuptools.package-data]
"*" = [
    "*.txt",
    "README.md",
]
"nlp_primitives" = [
    "data/nltk-data/**/*",
]

[tool.setuptools.exclude-package-data]
"*" = [
    "* __pycache__",
    "*.py[co]",
    "unpacked_sdist",
    "dist",
]

[tool.setuptools.dynamic]
version = {attr = "nlp_primitives.version.__version__"}

[tool.pytest.ini_options]
addopts = "--doctest-modules"
testpaths = [
    "nlp_primitives/tests/*"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

[tool.isort]
profile = "black"
forced_separate = "nlp_primitives"
known_first_party = "nlp_primitives"
skip = "__init__.py"
multi_line_output = 3

[tool.coverage.run]
source = ["nlp_primitives"]

[tool.coverage.report]
exclude_lines =[
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if self._verbose:",
    "if verbose:",
    "if profile:",
    "pytest.skip"
]