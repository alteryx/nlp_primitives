on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main
  workflow_dispatch:

name: Unit Tests - Latest Dependencies
jobs:
  unit_tests:
    name: Unit Tests - ${{ matrix.os }} - ${{ matrix.python_version }} - ${{ matrix.featuretools_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python_version: ["3.8", "3.9", "3.10"]
        featuretools_version: ["release", "main"]
    steps:
      - name: Set up python ${{ matrix.python_version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Install requirements
        run: |
          pip config --site set global.progress_bar off
      - if: ${{ matrix.featuretools_version == 'main' }}
        name: Install latest version of Featuretools from main branch
        run: |
          make installdeps-complete
          make installdeps-test
          pip install git+https://github.com/alteryx/featuretools.git@main#egg=featuretools --force-reinstall
      - if: ${{ matrix.featuretools_version == 'release' }}
        name: Install latest version of Featuretools from PyPI
        run: |
          make installdeps-complete
          make installdeps-test
      - if: ${{ matrix.python_version != 3.8 || matrix.featuretools_version != 'main' }}
        name: Run unit tests with no code coverage
        run: |
          make test
      - if: ${{ matrix.python_version == 3.8 && matrix.featuretools_version == 'main' }}
        name: Run unit tests with code coverage
        run: |
          pytest nlp_primitives/ --cov=nlp_primitives/ --cov-config=pyproject.toml --cov-report=xml:coverage.xml
      - if: ${{ matrix.python_version == 3.8 && matrix.featuretools_version == 'main' }}
        name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage2.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true
